name: Build and Deploy to Azure Static Website

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  AZURE_STORAGE_ACCOUNT_NAME: angursweb01   # <-- replace with your storage account name

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build the project
        run: npm run build

      - name: Copy SEO files from public to dist
        run: |
          echo "Copying SEO files from public to dist directory..."
          cp ./public/robots.txt ./dist/robots.txt
          cp ./public/sitemap.xml ./dist/sitemap.xml
          cp ./public/404.html ./dist/404.html
          cp ./public/staticwebapp.config.json ./dist/staticwebapp.config.json
          cp ./public/_redirects ./dist/_redirects
          echo "SEO files copied successfully!"

      - name: Verify build output
        run: |
          echo "Build output verification:"
          ls -la ./dist/
          echo ""
          echo "Checking for SEO files in build output:"
          [ -f "./dist/robots.txt" ] && echo "✅ robots.txt in dist" || echo "❌ robots.txt missing from dist"
          [ -f "./dist/sitemap.xml" ] && echo "✅ sitemap.xml in dist" || echo "❌ sitemap.xml missing from dist"
          [ -f "./dist/404.html" ] && echo "✅ 404.html in dist" || echo "❌ 404.html missing from dist"
          [ -f "./dist/staticwebapp.config.json" ] && echo "✅ staticwebapp.config.json in dist" || echo "❌ staticwebapp.config.json missing from dist"
          [ -f "./dist/_redirects" ] && echo "✅ _redirects in dist" || echo "❌ _redirects missing from dist"
          echo ""
          echo "File sizes:"
          ls -lh ./dist/robots.txt ./dist/sitemap.xml ./dist/404.html ./dist/staticwebapp.config.json ./dist/_redirects 2>/dev/null || echo "Some files missing"

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: site-dist
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: site-dist
          path: dist

      - name: Verify SEO files are present
        run: |
          echo "Checking for required SEO files..."
          ls -la ./dist/
          echo ""
          echo "Checking specific files:"
          [ -f "./dist/robots.txt" ] && echo "✅ robots.txt found" || echo "❌ robots.txt missing"
          [ -f "./dist/sitemap.xml" ] && echo "✅ sitemap.xml found" || echo "❌ sitemap.xml missing"
          [ -f "./dist/404.html" ] && echo "✅ 404.html found" || echo "❌ 404.html missing"
          [ -f "./dist/staticwebapp.config.json" ] && echo "✅ staticwebapp.config.json found" || echo "❌ staticwebapp.config.json missing"
          echo ""
          echo "File sizes:"
          ls -lh ./dist/robots.txt ./dist/sitemap.xml ./dist/404.html ./dist/staticwebapp.config.json 2>/dev/null || echo "Some files missing"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Static Website ($web)
        uses: azure/cli@v1
        with:
          inlineScript: |
            # List files before deployment for debugging
            echo "Files to be deployed:"
            ls -la ./dist/
            
            # First, deploy all files using upload-batch
            echo "Deploying all files..."
            az storage blob upload-batch \
              --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
              --destination '$web' \
              --source ./dist \
              --auth-mode login \
              --overwrite true
            
            # Now upload SEO files individually to ensure they're deployed
            echo "Uploading SEO files individually..."
            
            # Upload robots.txt
            if [ -f "./dist/robots.txt" ]; then
              echo "Uploading robots.txt..."
              az storage blob upload \
                --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
                --container-name '$web' \
                --name 'robots.txt' \
                --file './dist/robots.txt' \
                --content-type 'text/plain' \
                --auth-mode login \
                --overwrite
            fi
            
            # Upload sitemap.xml
            if [ -f "./dist/sitemap.xml" ]; then
              echo "Uploading sitemap.xml..."
              az storage blob upload \
                --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
                --container-name '$web' \
                --name 'sitemap.xml' \
                --file './dist/sitemap.xml' \
                --content-type 'application/xml' \
                --auth-mode login \
                --overwrite
            fi
            
            # Upload 404.html
            if [ -f "./dist/404.html" ]; then
              echo "Uploading 404.html..."
              az storage blob upload \
                --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
                --container-name '$web' \
                --name '404.html' \
                --file './dist/404.html' \
                --content-type 'text/html' \
                --auth-mode login \
                --overwrite
            fi
            
            # Upload staticwebapp.config.json
            if [ -f "./dist/staticwebapp.config.json" ]; then
              echo "Uploading staticwebapp.config.json..."
              echo "Content of staticwebapp.config.json:"
              cat ./dist/staticwebapp.config.json
              echo ""
              az storage blob upload \
                --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
                --container-name '$web' \
                --name 'staticwebapp.config.json' \
                --file './dist/staticwebapp.config.json' \
                --content-type 'application/json' \
                --auth-mode login \
                --overwrite
            fi
            
            
            # Verify deployment
            echo "Verifying deployment..."
            az storage blob list \
              --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
              --container-name '$web' \
              --auth-mode login \
              --query '[].{Name:name, ContentType:properties.contentSettings.contentType}' \
              --output table
            
            # Check for staticwebapp.config.json specifically
            echo "Checking for staticwebapp.config.json in deployment:"
            az storage blob show \
              --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
              --container-name '$web' \
              --name 'staticwebapp.config.json' \
              --auth-mode login \
              --query '{Name:name, ContentType:properties.contentSettings.contentType}' \
              --output table || echo "staticwebapp.config.json not found in deployment"
            
            # Test specific SEO files
            echo "Testing SEO file accessibility..."
            echo "robots.txt URL: https://${{ env.AZURE_STORAGE_ACCOUNT_NAME }}.z13.web.core.windows.net/robots.txt"
            echo "sitemap.xml URL: https://${{ env.AZURE_STORAGE_ACCOUNT_NAME }}.z13.web.core.windows.net/sitemap.xml"
            
            # Wait a moment for CDN propagation
            echo "Waiting for CDN propagation..."
            sleep 10
            
            # Test if files are accessible
            echo "Testing file accessibility..."
            curl -I "https://${{ env.AZURE_STORAGE_ACCOUNT_NAME }}.z13.web.core.windows.net/robots.txt" || echo "robots.txt not accessible yet"
            curl -I "https://${{ env.AZURE_STORAGE_ACCOUNT_NAME }}.z13.web.core.windows.net/sitemap.xml" || echo "sitemap.xml not accessible yet"